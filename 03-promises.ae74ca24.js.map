{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAIMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,gBAAiBF,SAASC,cAAc,kBACxCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAUtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAdTT,EAAKC,KAAKgB,iBAAiB,UAkB3B,SAAsBC,GACpBA,EAAEC,iBAOF,IALA,IAAIC,EAAQC,OAAOrB,EAAKI,gBAAgBkB,OACpCC,EAAOF,OAAOrB,EAAKK,UAAUiB,OAC7BE,EAASH,OAAOrB,EAAKM,YAAYgB,OAG5BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnClB,EAAckB,EAFKL,EAAQG,EAAOE,GAGjCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBX,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// ---------------------------IMPORTS---------------------------------\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n// --------------------------VARIABLES--------------------------------\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]')\n}\n\n\n// -----------------------------CALLS---------------------------------\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\n\n// --------------------------FUNCTIONS-------------------------------\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(refs.firstDelayInput.value);\n  let step = Number(refs.stepInput.value);\n  let amount = Number(refs.amountInput.value);\n\n\n  for (let i = 1; i <= amount; i += 1) {\n    let currentDelay = delay + step * i;\n  \n    createPromise(i, currentDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });    \n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ae74ca24.js.map"}